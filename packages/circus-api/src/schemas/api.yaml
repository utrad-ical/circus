$schema: 'http://json-schema.org/schema#'
$async: true
title: apiSchema
description: >
  This is a meta-schema that explains the format of API manifest yaml files
  under `api/*/index.yaml`.
properties:
  name: { type: 'string' }
  description: { type: 'string' }
  routes:
    type: array
    items:
      type: object
      properties:
        verb:
          type: string
          enum: ['get', 'put', 'post', 'patch', 'delete']
          description: HTTP verb of this route.
        path:
          type: string
          description: HTTP URL path of this route.
        handler:
          type: string
          description: >
            Handle fucntion name. If omitted, default value is determined
            from the verb (eg. "handleGet", "handlePatch").
        description:
          type: string
          description: >
            API description. Parsed as markdown, appears as API reference.
        requiredGlobalPrivilege:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        requiredProjectPrivilege:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        requiredSeriesDomainCheck:
          oneOf:
            - type: string
            - type: boolean
        forDebug:
          type: boolean
          description: >
            This route will be loaded only when the API server is loaded
            in the debug mode.
        expectedContentType:
          type: string
          default: 'application/json'
        requestSchema:
          type: ['object', 'string']
          description: >
            JSON Schema of the HTTP request JSON.
            A string value represents the ID of the schema,
            whereas an object value represents an actual JSON schema
            (you can still use `$ref` to reference external schema).
        responseSchema:
          type: ['object', 'string']
          description: >
            JSON Schema of the HTTP response JSON.
            A string value represents the ID of the schema,
            whereas an object value represents an actual JSON schema
            (you can still use `$ref` to reference external schema).
      required: ['verb', 'path']
      additionalProperties: false
additionalProperties: false
required: ['routes']
